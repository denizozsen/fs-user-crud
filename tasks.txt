Task List for Formstack test assignment, June 2017, by Deniz Ozsen
==================================================================



T1. Set up development environment

  Description:
     * Set up and provision Vagrant image
     * Ensure Apache is working
     * Ensure MySQL is working
     * Ensure PHPUnit is installed and working
     * Create project structure, according to composer standards and with PSR-2 autoloader

  Deliverables:
     * A fully functional development environment, with the necessary
       tools listed in the description of the assignment.

  Estimate: 1-2 hours
  Actual: 1h 45m
  Status: Done



T2. Analyse requirements and create development tasks

  Description:
      * Analyse requirements and determine what functionality will be implemented
      * Break down solution into tasks and sub-tasks
      * Provide rough estimate for each task

  Deliverables:
      * Development tasks required to finish the project

  Estimate: 2-4 hours
  Actual: 2h 15m
  Status: Done for now (might need some tweaking later on)



T3. Database schema for user

  Description:
      We will need at least be following columns in the user table:
          * user_id
          * email
          * first_name
          * last_name
          * password
  Deliverables:
      * The table creation SQL for the user table.
  Estimate: 30m
  Actual: 15m
  Status: Done


T4. Data model for user

  Description:
      * Functionality for retrieving user data from db and present it as User objects
      * Functionality for saving data in User object to db
      * Functionality for deleting record in db corresponding to a User object
      * Functionality for validating data in User object, according to rules for each field
      * Automatically run validation before each save, and cancel save, if validation fails
  Deliverables:
      * Data model class (and any supporting classes, as necessary), implementing the required functionality
  Estimate: 1-2 hours
  Actual: 15m
  Status: In Progress



T5. CLI framework

  Description:
      We need a simple framework that will be used to facilitate the implementation of T6.
      * Provide CliApp base class that applications extend for access to the following functionality:
          - command line arguments
          - ability to choose controller
          - methods for invoking actions:
              -> pass action parameters as method arguments
              -> receive action output in terminal-friendly format
      * Command line arguments parser
      * Controller decorator that provides interface for CLI app to interact with a controller
  Deliverables:
      * Classes implementing the required functionality
  Estimate: 1-3 hours
  Actual:
  Status: To Do



T6. CLI application for user management

  Description:
      In this task we develop a CLI application that makes it possible to run the user CRUD operations
      via commands in a terminal. This will use the CLI framework developed in T5.
  Deliverables:
      * A class that extends CliApp and implements the required functionality
  Estimate: 30m
  Actual:
  Status: To Do



T7. Routing Framework

  Description:
      * Request handler base class
      * Ability to configure a mapping from request path to Handler class
      * .htaccess rules to let a single php file handle all requests, except for requests to image files
      * Route request to appropriate handler
  Deliverables:
      * Classes implementing the required functionality
      * .htaccess file containing the required URL rewrite rule
      * Entry point PHP script, targeted by .htaccess rewrite rule. This will instantiate and make calls to theappropriate
        request handler object.
      * Configuration mechanism for creating a request-to-handler mapping
  Estimate: 2-8 hours
  Actual:
  Status: To Do


T8. User JSON API

  Description:
      * Sub-class of request handler class (from T7) that passes incoming requests to a configured Controller
        and outputs data returned by Controller in json format
  Deliverables:
      * The class, as per description.
  Estimate: 30m
  Actual:
  Status: To Do



T9. [OPTIONAL] Angular-based web application

  Description:
      If there is enough time, a web application for the User CRUD operations will be developed, based on Angular.
  Deliverables:
      * JS files implementing the Angular app
      *
      * Routing configuration
  Estimate: 2-8 hours
  Actual:
  Status: To Do

